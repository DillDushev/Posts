[{"/home/dilyan/web_projects/Tasks/rtr1/src/index.js":"1","/home/dilyan/web_projects/Tasks/rtr1/src/reportWebVitals.js":"2","/home/dilyan/web_projects/Tasks/rtr1/src/App.js":"3","/home/dilyan/web_projects/Tasks/rtr1/src/components/Fibonachi.js":"4","/home/dilyan/web_projects/Tasks/rtr1/src/components/BeginnerInterview.js":"5","/home/dilyan/web_projects/Tasks/rtr1/src/components/Toggle.js":"6","/home/dilyan/web_projects/Tasks/rtr1/src/components/Posts.js":"7","/home/dilyan/web_projects/Tasks/rtr1/src/components/getData.js":"8"},{"size":500,"mtime":1608311925265,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608311925265,"results":"11","hashOfConfig":"10"},{"size":169,"mtime":1610567214284,"results":"12","hashOfConfig":"10"},{"size":1314,"mtime":1610315253868,"results":"13","hashOfConfig":"10"},{"size":1774,"mtime":1610392084241,"results":"14","hashOfConfig":"10"},{"size":1340,"mtime":1610392513510,"results":"15","hashOfConfig":"10"},{"size":2721,"mtime":1610566997619,"results":"16","hashOfConfig":"10"},{"size":481,"mtime":1610566541048,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"b57a2g",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dilyan/web_projects/Tasks/rtr1/src/index.js",[],["38","39"],"/home/dilyan/web_projects/Tasks/rtr1/src/reportWebVitals.js",[],"/home/dilyan/web_projects/Tasks/rtr1/src/App.js",[],"/home/dilyan/web_projects/Tasks/rtr1/src/components/Fibonachi.js",["40"],"import * as React from 'react'\nimport pic from './Damian.JPG'\nconst {useState, useMemo, useCallback, memo} = React\n\nfunction FibDisplay ({length}) {\n    const numbers = useMemo(() => {\n        const a = [1, 1]\n        console.log('Calculating and display Fibonacci')\n        for(let i = 2; i < length; i++) {\n            a[i] = a[i - 1] + a[i - 2]\n        }\n        return a\n    }, [length])\n\n    return (\n        <p>{length} numbers of the fibonacci sequence: <br /> {numbers.join(' ,')}</p>\n\n    );\n}\n\nconst NameDisplay = memo( function ({ name }) {\n        console.log('Displayiong name')\n        return <p>Your Nmae is: {name}</p>\n    })\n\nfunction Fibonacci () {\n    const [length, setLength] = useState(3)\n    const [name, setName] = useState('Nikola')\n\n    const onLengthChange = useCallback((e) => setLength(Number(e.target.value) || 0, []))\n    const onNameChange = useCallback((e) => setName(e.target.value), [])\n    return (\n        <>\n            <input value={name} onChange={onNameChange} />\n            <h2>Damian</h2>\n            <img src={pic} width={120} height={150} alt={'*'}></img>\n            <NameDisplay name={name} /> \n            <input value={length} onChange={onLengthChange}/>\n            <FibDisplay length={length} />\n            <hr />\n        </>\n    );\n}\n\nexport default Fibonacci;",["41","42"],"/home/dilyan/web_projects/Tasks/rtr1/src/components/BeginnerInterview.js",[],"/home/dilyan/web_projects/Tasks/rtr1/src/components/Toggle.js",["43"],"import * as React from 'react';\n\nconst {useState, useEffect, useContext, createContext} = React;\n\nconst ToggleContext = createContext();\n\nfunction Switch(props) {\n  return ( \n    <label className='switch'>\n      <input type='checkbox' onClick={props.onClick} />\n      <span className='slider round'></span>\n    </label>\n  );\n}\n\nfunction Toggle (props) {\n  const [on, setOn] = useState(false);\n  const toggle = () => setOn(oldOn => !oldOn);\n\n  useEffect(() => {\n    props.onToggle(on);\n  }, [on]);\n\n  return (\n    <ToggleContext.Provider value = {{on, toggle}}>\n      {props.children}\n    </ToggleContext.Provider>\n  );\n};\n\nconst On = ({children}) => {\n  const {on} = useContext(ToggleContext);\n  return on ? children : null;\n};\n\nToggle.On = On;\n\nconst Off = ({children}) => {\n  const {on} = useContext(ToggleContext);\n  return on ? null : children;\n};\n\nToggle.Off = Off;\n\nconst Button = props => {\n  const {on, toggle} = useContext(ToggleContext);\n  return <Switch on = {on} onClick = {toggle} {...props} />\n};\n\nToggle.Button = Button;\n\nexport default function Usage({onToggle = (...args) => console.log('onToggle', ...args)}) {\n\n  return (\n    <Toggle onToggle={onToggle}>\n      <Toggle.On>The button is On</Toggle.On>\n      <Toggle.Off>The button is Off</Toggle.Off>\n      <div>\n        <Toggle.Button />\n      </div>\n    </Toggle>\n  );\n}","/home/dilyan/web_projects/Tasks/rtr1/src/components/Posts.js",[],"/home/dilyan/web_projects/Tasks/rtr1/src/components/getData.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":30,"column":28,"nodeType":"50","endLine":30,"endColumn":39},{"ruleId":"44","replacedBy":"51"},{"ruleId":"46","replacedBy":"52"},{"ruleId":"48","severity":1,"message":"53","line":22,"column":6,"nodeType":"54","endLine":22,"endColumn":10,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier",["56"],["57"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [on, props]",{"range":"61","text":"62"},[490,494],"[on, props]"]